query customers(
  $where: CustomerWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy
) {
  result: customersConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      total
      totalPages
      current
      pageSize
    }
    edges {
      node {
        id
        name
        ticketStrategy
        contactInfo {
          name
          address {
            province
            provinceName
            city
            cityName
            district
            districtName
            street
            streetName
            detailedAddress
            fullAddress(excludeDetailed: true)
          }
          phone
          email
        }
      }
      cursor
    }
  }
}

mutation createCustomer($input: CustomerCreateInput!) {
  result: createCustomer(input: $input) {
    id
    name
  }
}

mutation updateCustomer($id: ID!, $input: CustomerUpdateInput!) {
  result: updateCustomer(id: $id, input: $input) {
    id
    name
  }
}

mutation deleteManyCustomers($where: CustomerWhereInput!) {
  result: deleteManyCustomers(where: $where) {
    count
  }
}

query customerStores(
  $where: CustomerStoreWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy
) {
  result: customerStoresConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      total
      totalPages
      current
      pageSize
    }
    edges {
      node {
        ...CustomerStoreParts
      }
      cursor
    }
  }
}

mutation createCustomerStore($input: CustomerStoreCreateInput!) {
  result: createCustomerStore(input: $input) {
    ...CustomerStoreParts
  }
}

mutation updateCustomerStore($id: ID!, $input: CustomerStoreUpdateInput!) {
  result: updateCustomerStore(id: $id, input: $input) {
    ...CustomerStoreParts
  }
}

mutation deleteManyCustomerStores($where: CustomerStoreWhereInput!) {
  result: deleteManyCustomerStores(where: $where) {
    count
  }
}

query tickets(
  $where: TicketWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy
) {
  result: ticketsConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      total
      totalPages
      current
      pageSize
    }
    edges {
      node {
        ...TicketParts
      }
      cursor
    }
  }
}

query ticket($id: ID!) {
  result: ticket(id: $id) {
    ...TicketParts
    attachments
    statusHistory {
      id
      status
      loggedBy {
        id
        name
      }
      logTime(format: "yyyy-MM-dd HH:mm")
      note
    }
  }
}

mutation createTicket($input: TicketCreateInput!) {
  result: createTicket(input: $input) {
    id
  }
}

mutation updateTicket($id: ID!, $input: TicketUpdateInput!) {
  result: updateTicket(id: $id, input: $input) {
    id
  }
}

mutation deleteManyTickets($where: TicketWhereInput!) {
  result: deleteManyTickets(where: $where) {
    count
  }
}

query customer($id: ID!) {
  result: customer(id: $id) {
    id
    name
    ticketStrategy
    contactInfo {
      name
      address {
        province
        provinceName
        city
        cityName
        district
        districtName
        street
        streetName
        detailedAddress
        fullAddress(excludeDetailed: true)
      }
      phone
      email
    }
  }
}

# mutation deleteManyTickets($where: TicketWhereInput!) {
#   result: deleteManyTickets(where: $where) {
#     count
#   }
# }

fragment TicketParts on Ticket {
  id
  no
  description
  device: target {
    id
    ... on Device {
      id
      sn
      name
      warrantyStatus
      warrantyStartDate(format: "yyyy-MM-dd")
      brand {
        id
        name
      }
      product {
        id
        name
      }
    }
  }
  customer {
    id
    name
  }
  store {
    id
    no
    name
    address {
      fullAddress
    }
    phone
    openingDate(format: "yyyy-MM-dd")
  }
  createdAt(format: "yyyy-MM-dd HH:mm:ss")
  status
  contactInfo {
    name
    phone
    email
    address {
      fullAddress
    }
  }
  assignee {
    id
    name
    phone {
      number
    }
  }
  completedAt(format: "yyyy-MM-dd HH:mm")
}

fragment CustomerStoreParts on CustomerStore {
  id
  no
  name
  openingDate(format: "yyyy-MM-dd")
  deviceCount
  phone
  contactInfo {
    name
    phone
  }
  address {
    province
    provinceName
    city
    cityName
    district
    districtName
    street
    streetName
    detailedAddress
    fullAddress(excludeDetailed: true)
  }
}

query org($code: ID!) {
  organization(id: $code) {
    id
  }
}

mutation createOrg($input: OrganizationCreateInput!) {
  organization: createOrganization(input: $input) {
    id
  }
}
