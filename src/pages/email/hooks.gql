query mailUser {
  mailUser {
    id
    name
    domain {
      name
    }
    settings {
      mailboxes
    }
  }
  mailboxes {
    id
    name
    namespace
    count
  }
  inbox: mailbox(id: "inbox") {
    id
    unread: count(type: UNREAD)
  }
}

query countUnread {
  inbox: mailbox(id: "inbox") {
    id
    unread: count(type: UNREAD)
  }
}

query mailboxes {
  mailboxes {
    id
    name
    namespace
  }
}

mutation createMailbox($namespace: String!, $name: String!) {
  createMailbox(namespace: $namespace, name: $name) {
    id
    name
    namespace
  }
}

mutation updateMyFavoriteMailboxes($mailboxes: [String!]!, $mode: UpdateMode) {
  mailboxes: updateMyFavoriteMailboxes(mailboxes: $mailboxes, mode: $mode)
}

mutation moveMailboxMessageToFolder($id: ID!, $mailbox: ID!) {
  moveMailboxMessageToFolder(id: $id, mailbox: $mailbox) {
    id
    ...MailboxMessageFlagParts
  }
}

mutation updateMailboxMessageFlags($id: ID!, $flags: [String!]!, $mode: MailboxFlagsUpdateMode) {
  updateMailboxMessageFlags(id: $id, flags: $flags, mode: $mode) {
    id
    ...MailboxMessageFlagParts
  }
}

query mailboxMessage($id: ID!) {
  message: mailboxMessage(id: $id) {
    index
    ...MailboxMessageParts
    ...MailboxMessageFlagParts
  }
}

query mailboxMessages($user: ID, $filter: MailboxMessageFilter, $page: Int = 1) {
  mailboxMessages(user: $user, filter: $filter, page: $page) {
    totalCount
    pageSize
    totalPage
    currentPage
    edges {
      node {
        ...MailboxMessageParts
        ...MailboxMessageFlagParts
      }
    }
  }
}

fragment MailboxMessageParts on MailboxMessage {
  id
  subject
  date
  sender {
    name
    domain
    localPart
    address
  }
  from {
    name
    localPart
    domain
    address
  }
  to {
    name
    localPart
    domain
    address
  }
  mimeType
  body
}

fragment MailboxMessageFlagParts on MailboxMessage {
  answered
  deleted
  draft
  flagged
  recent
  seen
}
