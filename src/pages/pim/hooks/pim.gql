query deviceQrCodes(
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  deviceQrCodes: shortLinksConnection(
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        code
        url
        category
        accessCount
        expiresAt(format: "yyyy-MM-dd HH:mm:ss")
        createdAt(format: "yyyy-MM-dd HH:mm:ss")
        metadata
      }
    }
  }
}

query devices(
  $where: DeviceWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  result: devicesConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        no
        sn
        name
        status {
          id
          name
        }
        brand {
          id
          name
        }
        owner {
          id
          name
          ... on CustomerStore {
            customer {
              id
              name
            }
          }
        }
        warrantyStatus
        warrantyEndDate(format: "yyyy-MM-dd")
        address {
          province
          city
          district
          street
          detailedAddress
          fullAddress(excludeDetailed: true)
        }
        createdAt(format: "yyyy-MM-dd")
      }
    }
  }
}

query device($id: ID!) {
  result: device(id: $id) {
    id
    no
    sn
    name
    brand {
      id
      name
    }
    warrantyStatus
    purchaseDate(format: "yyyy-MM-dd")
    warrantyStartDate(format: "yyyy-MM-dd")
    warrantyEndDate(format: "yyyy-MM-dd")
    warrantyCards {
      id
      status
      endDate
      policy {
        id
      }
    }
    address {
      country
      province
      city
      district
      street
      detailedAddress
    }
    contactInfo {
      name
      phone
      email
    }
    product {
      id
      name
    }
    owner {
      id
      ... on CustomerStore {
        name
        customer {
          id
          name
          ticketStrategy
        }
      }
    }
    createdAt(format: "yyyy-MM-dd HH:mm")
    createdBy {
      id
      name
    }
    updatedAt(format: "yyyy-MM-dd")
    updatedBy {
      id
      name
    }
  }
}

mutation deleteManyDevices($where: DeviceWhereInput) {
  result: deleteManyDevices(where: $where) {
    count
  }
}

mutation updateDevice($id: ID!, $input: DeviceUpdateInput!) {
  result: updateDevice(id: $id, input: $input) {
    id
  }
}

query brands(
  $where: BrandWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  result: brandsConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        name
        createdAt(format: "yyyy-MM-dd")
        description
      }
    }
  }
}

query productAll($where: ProductWhereInput) {
  products(where: $where, limit: 100) {
    id
    name
    brand {
      id
      name
    }
    warrantyPolicies {
      id
      name
      duration
    }
    images {
      id
      url
      alt
      title
      description
    }
  }
}

query products(
  $where: ProductWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  result: productsConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        name
        brand {
          id
          name
        }
        createdAt(format: "yyyy-MM-dd")
      }
    }
  }
}

mutation deleteManyShortLinks($where: ShortLinkWhereInput) {
  result: deleteManyShortLinks(where: $where) {
    count
  }
}

mutation generateShortLinks($links: [ShortLinkCreateInput!]!) {
  result: generateShortLinks(links: $links) {
    id
    code
    url
    accessCount
    metadata
  }
}

query product($id: ID!) {
  result: product(id: $id) {
    id
    name
    brand {
      id
      name
    }
    warrantyPolicies {
      id
      name
      duration
      createdAt(format: "yyyy-MM-dd")
    }
    images {
      id
      url
      alt
      title
      description
      image
    }
    videos: articles(linkageType: "videos") {
      id
      title
      createdAt(format: "yyyy-MM-dd")
    }
    knowledgebase: articles(linkageType: "knowledgebase") {
      id
      title
      createdAt(format: "yyyy-MM-dd")
    }
    notebook: articles(linkageType: "notebook") {
      id
      title
    }
    tutorials: articles(linkageType: "tutorials") {
      id
      title
    }
    createdAt(format: "yyyy-MM-dd")
  }
}

mutation deleteProduct($id: ID!) {
  result: deleteProduct(id: $id) {
    id
  }
}

mutation createProduct($input: ProductCreateInput!) {
  result: createProduct(input: $input) {
    id
  }
}

mutation updateProduct($id: ID!, $input: ProductUpdateInput!) {
  result: updateProduct(id: $id, input: $input) {
    id
  }
}

mutation addArticleToProduct(
  $productId: ID!
  $linkageType: String!
  $articleIds: [ID!]!
) {
  result: addArticlesToProduct(
    productId: $productId
    linkageType: $linkageType
    articleIds: $articleIds
  ) {
    id
  }
}

mutation removeArticleFromProduct(
  $productId: ID!
  $linkageType: String!
  $articleIds: [ID!]!
) {
  result: removeArticlesFromProduct(
    productId: $productId
    linkageType: $linkageType
    articleIds: $articleIds
  ) {
    id
  }
}

mutation createWarrantyPolicy($input: WarrantyPolicyCreateInput!) {
  result: createWarrantyPolicy(input: $input) {
    id
  }
}

mutation updateWarrantyPolicy($id: ID!, $input: WarrantyPolicyUpdateInput!) {
  result: updateWarrantyPolicy(id: $id, input: $input) {
    id
  }
}

mutation deleteWarrantyPolicy($id: ID!) {
  result: deleteWarrantyPolicy(id: $id) {
    id
  }
}

mutation deleteManyWarrantyPolicies($where: WarrantyPolicyWhereInput) {
  result: deleteManyWarrantyPolicies(where: $where) {
    count
  }
}

mutation createBrand($input: BrandCreateInput!) {
  result: createBrand(input: $input) {
    id
    name
    description
  }
}

mutation updateBrand($id: ID!, $input: BrandUpdateInput!) {
  result: updateBrand(id: $id, input: $input) {
    id
    name
    description
  }
}

mutation deleteManyBrands($where: BrandWhereInput) {
  result: deleteManyBrands(where: $where) {
    count
  }
}

query customers($where: CustomerWhereInput, $limit: Int = 1000) {
  result: customers(where: $where, limit: $limit) {
    id
    name
  }
}

query customerStores($where: CustomerStoreWhereInput, $limit: Int = 1000) {
  result: customerStores(where: $where, limit: $limit) {
    id
    name
    address {
      province
      city
      district
      street
      detailedAddress
    }
    contactInfo {
      name
      phone
      email
    }
  }
}
