query deviceQrCodes {
  deviceQrCodes: shortLinksConnection {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        code
        url
        category
        accessCount
        expiresAt(format: "yyyy-MM-dd HH:mm:ss")
        createdAt(format: "yyyy-MM-dd HH:mm:ss")
        metadata
      }
    }
  }
}

query devices(
  $where: DeviceWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  result: devicesConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        no
        sn
        name
        status {
          id
          name
        }
        brand {
          id
          name
        }
        warrantyStatus
        warrantyEndDate(format: "yyyy-MM-dd")
        address {
          province
          city
          district
          street
          detailedAddress
          fullAddress(excludeDetailed: true)
        }
        createdAt(format: "yyyy-MM-dd")
      }
    }
  }
}

query brands(
  $where: BrandWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  result: brandsConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        name
        createdAt(format: "yyyy-MM-dd")
      }
    }
  }
}

query products(
  $where: ProductWhereInput
  $page: Int
  $pageSize: Int
  $orderBy: OrderBy = "createdAt_desc"
) {
  result: productsConnection(
    where: $where
    page: $page
    pageSize: $pageSize
    orderBy: $orderBy
  ) {
    pageInfo {
      totalPages
      pageSize
      total
      current
    }
    edges {
      node {
        id
        name
        brand {
          id
          name
        }
        createdAt(format: "yyyy-MM-dd")
      }
    }
  }
}

mutation deleteManyShortLinks($where: ShortLinkWhereInput) {
  result: deleteManyShortLinks(where: $where) {
    count
  }
}

mutation generateShortLinks($links: [ShortLinkCreateInput!]!) {
  result: generateShortLinks(links: $links) {
    id
    code
    url
    accessCount
    metadata
  }
}

query product($id: ID!) {
  result: product(id: $id) {
    id
    name
    brand {
      id
      name
    }
    warrantyPolicies {
      id
      name
      duration
      createdAt(format: "yyyy-MM-dd")
    }
    images {
      id
      url
      alt
      title
      description
      image
    }
    videos: articles(linkageType: "videos") {
      id
      title
      createdAt(format: "yyyy-MM-dd")
    }
    knowledgebase: articles(linkageType: "knowledgebase") {
      id
      title
      createdAt(format: "yyyy-MM-dd")
    }
    notebook: articles(linkageType: "notebook") {
      id
      title
    }
    tutorials: articles(linkageType: "tutorials") {
      id
      title
    }
    createdAt(format: "yyyy-MM-dd")
  }
}

mutation deleteProduct($id: ID!) {
  result: deleteProduct(id: $id) {
    id
  }
}

mutation createProduct($input: ProductCreateInput!) {
  result: createProduct(input: $input) {
    id
  }
}

mutation updateProduct($id: ID!, $input: ProductUpdateInput!) {
  result: updateProduct(id: $id, input: $input) {
    id
  }
}

mutation addArticleToProduct(
  $productId: ID!
  $linkageType: String!
  $articleIds: [ID!]!
) {
  result: addArticlesToProduct(
    productId: $productId
    linkageType: $linkageType
    articleIds: $articleIds
  ) {
    id
  }
}

mutation removeArticleFromProduct(
  $productId: ID!
  $linkageType: String!
  $articleIds: [ID!]!
) {
  result: removeArticlesFromProduct(
    productId: $productId
    linkageType: $linkageType
    articleIds: $articleIds
  ) {
    id
  }
}

mutation createWarrantyPolicy($input: WarrantyPolicyCreateInput!) {
  result: createWarrantyPolicy(input: $input) {
    id
  }
}

mutation updateWarrantyPolicy($id: ID!, $input: WarrantyPolicyUpdateInput!) {
  result: updateWarrantyPolicy(id: $id, input: $input) {
    id
  }
}

mutation deleteWarrantyPolicy($id: ID!) {
  result: deleteWarrantyPolicy(id: $id) {
    id
  }
}

mutation deleteManyWarrantyPolicies($where: WarrantyPolicyWhereInput) {
  result: deleteManyWarrantyPolicies(where: $where) {
    count
  }
}
